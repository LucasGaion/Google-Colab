{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"NLP: Introdução a regex e modelos de linguagem","provenance":[],"authorship_tag":"ABX9TyNVBj4AhNLv/dEOARLNdYb0"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"D1PLvLanZ_yw","executionInfo":{"status":"ok","timestamp":1643846794417,"user_tz":180,"elapsed":300,"user":{"displayName":"Lucas Zanatta","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GizWUY3nlghMCN30EpQr4T-U0SKzTOjhzO15WtKBQ=s64","userId":"16010037920834815517"}}},"outputs":[],"source":["import pandas as pd"]},{"cell_type":"code","source":["dados_portugues = pd.read_csv(\"stackoverflow_portugues.csv\")\n","dados_portugues.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"brFglXIhaLhb","executionInfo":{"status":"ok","timestamp":1643846796340,"user_tz":180,"elapsed":4,"user":{"displayName":"Lucas Zanatta","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GizWUY3nlghMCN30EpQr4T-U0SKzTOjhzO15WtKBQ=s64","userId":"16010037920834815517"}},"outputId":"086066f4-3661-42db-ca0a-15c2c6fc0b38"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-9da0b3aa-088c-4c07-9a67-3c9baa78bb96\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>Título</th>\n","      <th>Questão</th>\n","      <th>Tags</th>\n","      <th>Pontuação</th>\n","      <th>Visualizações</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2402</td>\n","      <td>Como fazer hash de senhas de forma segura?</td>\n","      <td>&lt;p&gt;Se eu fizer o &lt;em&gt;&lt;a href=\"http://pt.wikipe...</td>\n","      <td>&lt;hash&gt;&lt;segurança&gt;&lt;senhas&gt;&lt;criptografia&gt;</td>\n","      <td>350</td>\n","      <td>22367</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>6441</td>\n","      <td>Qual é a diferença entre INNER JOIN e OUTER JOIN?</td>\n","      <td>&lt;p&gt;Qual é a diferença entre &lt;code&gt;INNER JOIN&lt;/...</td>\n","      <td>&lt;sql&gt;&lt;join&gt;</td>\n","      <td>276</td>\n","      <td>176953</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>579</td>\n","      <td>Por que não devemos usar funções do tipo mysql_*?</td>\n","      <td>&lt;p&gt;Uma dúvida muito comum é por que devemos pa...</td>\n","      <td>&lt;php&gt;&lt;mysql&gt;</td>\n","      <td>226</td>\n","      <td>9761</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2539</td>\n","      <td>As mensagens de erro devem se desculpar?</td>\n","      <td>&lt;p&gt;É comum encontrar uma mensagem de erro que ...</td>\n","      <td>&lt;aplicação-web&gt;&lt;gui&gt;&lt;console&gt;&lt;ux&gt;</td>\n","      <td>214</td>\n","      <td>5075</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>17501</td>\n","      <td>Qual é a diferença de API, biblioteca e Framew...</td>\n","      <td>&lt;p&gt;Me parecem termos muito próximos e eventual...</td>\n","      <td>&lt;api&gt;&lt;framework&gt;&lt;terminologia&gt;&lt;biblioteca&gt;</td>\n","      <td>193</td>\n","      <td>54191</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9da0b3aa-088c-4c07-9a67-3c9baa78bb96')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9da0b3aa-088c-4c07-9a67-3c9baa78bb96 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9da0b3aa-088c-4c07-9a67-3c9baa78bb96');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["      Id  ... Visualizações\n","0   2402  ...         22367\n","1   6441  ...        176953\n","2    579  ...          9761\n","3   2539  ...          5075\n","4  17501  ...         54191\n","\n","[5 rows x 6 columns]"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["print(dados_portugues.Questão[5])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I-UunNXkbeAs","executionInfo":{"status":"ok","timestamp":1643846799681,"user_tz":180,"elapsed":4,"user":{"displayName":"Lucas Zanatta","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GizWUY3nlghMCN30EpQr4T-U0SKzTOjhzO15WtKBQ=s64","userId":"16010037920834815517"}},"outputId":"ee8e5ee8-39fc-4a24-ba83-c3652038fa8a"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["<p>Desenvolvi uma página em PHP para uso interno da empresa que trabalho e apenas pouquíssimas pessoas a utilizam. Através dessa página é possível fazer algumas consultas, inserções, alterações e remoções de dados de uma tabela em um banco de dados MySQL, porém eu acredito que meu código em PHP não está protegido contra injeção de código SQL, por exemplo:</p>\n","\n","<pre><code>//----CONSULTA SQL----//\n","$busca = mysql_query ('insert into Produtos (coluna) values(' . $valor . ')');\n","</code></pre>\n","\n","<p>Logo, digamos que o usuário usar a sentença: <code>1); DROP TABLE Produtos;</code> para ao campo <code>valor</code> o comando ficaria: </p>\n","\n","<pre><code>insert into Produtos (coluna) values(1); DROP TABLE Produtos;\n","</code></pre>\n","\n","<p>Ele vai inserir um novo registro cujo o campo <code>coluna</code> será <code>1</code> e logo em seguida ele vai deletar a tabela Produtos.</p>\n","\n","<p>Como posso melhorar meu código para prevenir essa situação?</p>\n","\n"]}]},{"cell_type":"code","source":["dados_ingles = pd.read_csv(\"stackoverflow_ingles.csv\")\n","dados_ingles.head()"],"metadata":{"id":"EczM6p6AcZbp","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1643846992414,"user_tz":180,"elapsed":579,"user":{"displayName":"Lucas Zanatta","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GizWUY3nlghMCN30EpQr4T-U0SKzTOjhzO15WtKBQ=s64","userId":"16010037920834815517"}},"outputId":"093ef8d5-8bd9-4aca-e03e-2ef7c7ff786a"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-0944381b-72aa-45eb-acbb-1d0ecc9dab4b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>Título</th>\n","      <th>Questão</th>\n","      <th>Tags</th>\n","      <th>Pontuação</th>\n","      <th>Visualizações</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>11227809</td>\n","      <td>Why is it faster to process a sorted array tha...</td>\n","      <td>&lt;p&gt;Here is a piece of C++ code that seems very...</td>\n","      <td>&lt;java&gt;&lt;c++&gt;&lt;performance&gt;&lt;optimization&gt;&lt;branch-...</td>\n","      <td>23057</td>\n","      <td>1358574</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>927358</td>\n","      <td>How do I undo the most recent local commits in...</td>\n","      <td>&lt;p&gt;I accidentally committed the wrong files to...</td>\n","      <td>&lt;git&gt;&lt;version-control&gt;&lt;git-commit&gt;&lt;undo&gt;</td>\n","      <td>19640</td>\n","      <td>7906137</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2003505</td>\n","      <td>How do I delete a Git branch locally and remot...</td>\n","      <td>&lt;p&gt;I want to delete a branch both locally and ...</td>\n","      <td>&lt;git&gt;&lt;git-branch&gt;&lt;git-remote&gt;</td>\n","      <td>15249</td>\n","      <td>6940906</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>292357</td>\n","      <td>What is the difference between 'git pull' and ...</td>\n","      <td>&lt;blockquote&gt;\\n  &lt;p&gt;&lt;strong&gt;Moderator Note:&lt;/st...</td>\n","      <td>&lt;git&gt;&lt;git-pull&gt;&lt;git-fetch&gt;</td>\n","      <td>11008</td>\n","      <td>2543052</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>477816</td>\n","      <td>What is the correct JSON content type?</td>\n","      <td>&lt;p&gt;I've been messing around with &lt;a href=\"http...</td>\n","      <td>&lt;json&gt;&lt;http-headers&gt;&lt;content-type&gt;</td>\n","      <td>9701</td>\n","      <td>2478940</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0944381b-72aa-45eb-acbb-1d0ecc9dab4b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0944381b-72aa-45eb-acbb-1d0ecc9dab4b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0944381b-72aa-45eb-acbb-1d0ecc9dab4b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["         Id  ... Visualizações\n","0  11227809  ...       1358574\n","1    927358  ...       7906137\n","2   2003505  ...       6940906\n","3    292357  ...       2543052\n","4    477816  ...       2478940\n","\n","[5 rows x 6 columns]"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["print(dados_ingles.Questão[0])"],"metadata":{"id":"CPpR6uLKcZO_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1643847025777,"user_tz":180,"elapsed":397,"user":{"displayName":"Lucas Zanatta","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GizWUY3nlghMCN30EpQr4T-U0SKzTOjhzO15WtKBQ=s64","userId":"16010037920834815517"}},"outputId":"88cf1079-9687-4604-91e8-8bea34e0e83e"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["<p>Here is a piece of C++ code that seems very peculiar. For some strange reason, sorting the data miraculously makes the code almost six times faster.</p>\n","\n","<pre class=\"lang-cpp prettyprint-override\"><code>#include &lt;algorithm&gt;\n","#include &lt;ctime&gt;\n","#include &lt;iostream&gt;\n","\n","int main()\n","{\n","    // Generate data\n","    const unsigned arraySize = 32768;\n","    int data[arraySize];\n","\n","    for (unsigned c = 0; c &lt; arraySize; ++c)\n","        data[c] = std::rand() % 256;\n","\n","    // !!! With this, the next loop runs faster\n","    std::sort(data, data + arraySize);\n","\n","    // Test\n","    clock_t start = clock();\n","    long long sum = 0;\n","\n","    for (unsigned i = 0; i &lt; 100000; ++i)\n","    {\n","        // Primary loop\n","        for (unsigned c = 0; c &lt; arraySize; ++c)\n","        {\n","            if (data[c] &gt;= 128)\n","                sum += data[c];\n","        }\n","    }\n","\n","    double elapsedTime = static_cast&lt;double&gt;(clock() - start) / CLOCKS_PER_SEC;\n","\n","    std::cout &lt;&lt; elapsedTime &lt;&lt; std::endl;\n","    std::cout &lt;&lt; \"sum = \" &lt;&lt; sum &lt;&lt; std::endl;\n","}\n","</code></pre>\n","\n","<ul>\n","<li>Without <code>std::sort(data, data + arraySize);</code>, the code runs in 11.54 seconds.</li>\n","<li>With the sorted data, the code runs in 1.93 seconds.</li>\n","</ul>\n","\n","<p>Initially, I thought this might be just a language or compiler anomaly. So I tried it in Java.</p>\n","\n","<pre class=\"lang-java prettyprint-override\"><code>import java.util.Arrays;\n","import java.util.Random;\n","\n","public class Main\n","{\n","    public static void main(String[] args)\n","    {\n","        // Generate data\n","        int arraySize = 32768;\n","        int data[] = new int[arraySize];\n","\n","        Random rnd = new Random(0);\n","        for (int c = 0; c &lt; arraySize; ++c)\n","            data[c] = rnd.nextInt() % 256;\n","\n","        // !!! With this, the next loop runs faster\n","        Arrays.sort(data);\n","\n","        // Test\n","        long start = System.nanoTime();\n","        long sum = 0;\n","\n","        for (int i = 0; i &lt; 100000; ++i)\n","        {\n","            // Primary loop\n","            for (int c = 0; c &lt; arraySize; ++c)\n","            {\n","                if (data[c] &gt;= 128)\n","                    sum += data[c];\n","            }\n","        }\n","\n","        System.out.println((System.nanoTime() - start) / 1000000000.0);\n","        System.out.println(\"sum = \" + sum);\n","    }\n","}\n","</code></pre>\n","\n","<p>With a somewhat similar but less extreme result.</p>\n","\n","<hr>\n","\n","<p>My first thought was that sorting brings the data into the cache, but then I thought how silly that is because the array was just generated.</p>\n","\n","<ul>\n","<li>What is going on?</li>\n","<li>Why is it faster to process a sorted array than an unsorted array?</li>\n","<li>The code is summing up some independent terms, and the order should not matter.</li>\n","</ul>\n","\n"]}]},{"cell_type":"code","source":["import re\n","re.findall(\"<p>\",dados_portugues.Questão)"],"metadata":{"id":"dhmBmsXFcZGr","colab":{"base_uri":"https://localhost:8080/","height":304},"executionInfo":{"status":"error","timestamp":1643847352257,"user_tz":180,"elapsed":4,"user":{"displayName":"Lucas Zanatta","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GizWUY3nlghMCN30EpQr4T-U0SKzTOjhzO15WtKBQ=s64","userId":"16010037920834815517"}},"outputId":"4ca7ac93-cf93-4fb8-bcc1-c1555f931d43"},"execution_count":13,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-13-1aec02902d05>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mre\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mre\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfindall\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"<p>\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mdados_portugues\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mQuestão\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/lib/python3.7/re.py\u001b[0m in \u001b[0;36mfindall\u001b[0;34m(pattern, string, flags)\u001b[0m\n\u001b[1;32m    223\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    224\u001b[0m     Empty matches are included in the result.\"\"\"\n\u001b[0;32m--> 225\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_compile\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpattern\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mflags\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfindall\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstring\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    226\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    227\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mfinditer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpattern\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstring\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mflags\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: expected string or bytes-like object"]}]}]}